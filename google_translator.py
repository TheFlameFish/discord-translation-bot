import os
import json
from deep_translator import GoogleTranslator

def get_lang(lang):  # Takes a language code or full name and returns the language code
    with open("langs_GT.json") as f: # Note: the langs_GT.json file is mostly generated by GPT-4o
        langs = json.load(f)
    
    if lang in langs:
        return lang
    
    lang = lang.lower()
    
    # Search for full language name or aliases
    for code, details in langs.items():
        if lang == details["full"].lower() or lang == details["full_en"].lower() or lang in [alias.lower() for alias in details.get("aliases", [])]:
            return code

    return None

def get_from_emoji(emoji):
    """Finds a language by its associated emoji from langs.json."""
    print(f"Looking up language for emoji: {emoji}")
    with open("langs_GT.json") as f:
        langs = json.load(f)

    # Iterate through the languages and their flags
    for lang, data in langs.items():
        if emoji in data.get("flags", []):  # Check if the emoji is in the flags list
            print(f"Found language '{lang}' for emoji '{emoji}'")
            return lang
            
    print(f"No language found for emoji: {emoji}")
    return None

def translate(text, target_language):
    lang = get_lang(target_language)

    if lang:
        return GoogleTranslator(source='auto', target=lang).translate(text)
    
    return None